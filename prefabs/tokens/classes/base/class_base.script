local tokens = require "modules.tokens"
local enemies = require "modules.enemies"

local function fire()
    local enemy = enemies.get_closest_enemy_id(go.get_position())
    if enemy then
        local enemy_pos = enemies.placed_enemies[enemy].pos
        local enemy_url = msg.url(enemy)
        --factory.create("#bullet_factory", nil, nil, {enemy_url = enemy_url})
    end
end

function init(self)
    go.property("attack_delay", 0.5)
    go.property("hp", 20)
    go.property("is_placed_start", false)
    
    -- If token is going to init as placed
    if self.is_placed_start then
        timer.delay(self.attack_delay, true, fire)

        local start_pos = go.get_position()
        start_pos.x = math.floor((start_pos.x + 25) / 50)
        start_pos.y = math.floor((start_pos.y + 25) / 50)

        tokens.place(start_pos.x, start_pos.y)

        msg.post("/bg_creator#bg", "token_placed", {x = start_pos.x, y = start_pos.y,
            tint = vmath.vector4(1, 0, 0, 0.1)})
    end
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    -- Init token after placing
	if message_id == hash("placed") then
        timer.delay(self.attack_delay, true, fire)

        local start_pos = go.get_position()
        start_pos.x = math.floor((start_pos.x + 25) / 50)
        start_pos.y = math.floor((start_pos.y + 25) / 50)

        tokens.place(start_pos.x, start_pos.y)

        msg.post("/bg_creator#bg", "token_placed", {x = start_pos.x, y = start_pos.y,
            tint = vmath.vector4(1, 0, 0, 0.1)})

    elseif message_id == hash("trigger_response") then
        self.hp = self.hp - 10
        if self.hp < 0 then
            go.delete()
        end
    end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
