local tokens = require "modules.tokens"
local enemies = require "modules.enemies"

local function fire()
    local enemy = enemies.get_closest_enemy_id(go.get_position())
    if enemy then
        local enemy_url = msg.url(enemy)
        factory.create("#bullet_factory", nil, nil, {enemy_url = enemy_url})
    end
end

function init(self)
    go.property("is_placed_start", false)
    self.counter = 0
    self.token_table = {active_reload = math.huge}
    
    -- If token is going to init as placed
    if self.is_placed_start then
        local tile = { x = 0, y = 0}
        self.token_table = tokens.place(tile, "red_tower")

        msg.post("/bg_creator#bg", "token_placed", {tile = tile,
            tint = vmath.vector4(1, 0, 0, 0.1)})
    end
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	self.counter = self.counter + dt
    if self.token_table.active_reload < self.counter then
        self.counter = 0
        fire()
    end
end

function on_message(self, message_id, message, sender)
    -- Init token after placing
	if message_id == hash("placed") then
        self.token_table = tokens.place(mouse_pos, "red_tower")

        msg.post("/bg_creator#bg", "token_placed", {tile = mouse_pos,
            tint = vmath.vector4(1, 0, 0, 0.1)})

    elseif message_id == hash("trigger_response") then
        self.token_table.current_hp = self.token_table.current_hp - 10
        if self.token_table.current_hp < 0 then
            go.delete()
        end
    end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
